///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Library                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name      := MENU_H;

  - copyright := "Jonathan Ponte, Maxime Audrin, Benoit Sonntag";

  - comment   := "Horizontal menu for GUII.";
  
Section Inherit
  
  - parent_internal_inode:INTERNAL_INODE := INTERNAL_INODE;
  
Section Public
  
  - representation:STRING_CONSTANT := "MENU_H";
  + content:G_EXPR;
  + largeur:INTEGER;
  + hauteur:INTEGER;

  - make_representation <-
  (
    +name:STRING;
    +expr:G_EXPR;
    (list.lower).to (list.upper) do {
      i:INTEGER;
      name:=(list.item i).get_name;
      (i=1).if {
        expr:=G_BUTTON.create (G_OUT.create name) ;
      } else {
        expr:=expr | G_BUTTON.create (G_OUT.create name);
      };
    };
    content:=(G_RAW.create expr).fix_height.fix_width;
  );
