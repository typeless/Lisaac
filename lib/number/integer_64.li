////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name    := Expanded INTEGER_64 -> INTEGER;
  
  - comment := "Signed 64 bits integer.";

  - type    := `signed long long`;
  - default := (0.to_raw_integer_64);
  
Section Insert
  
  - parent_signed_integer:SIGNED_INTEGER := SIGNED_INTEGER;
  
Section Public

  - object_size:INTEGER := 8;
  
    
  - '-' :SELF <- zero - Self;
  
  //
  // Range
  //
  
  - maximum:UINTEGER_64 <- 07FFF_FFFFh.to_raw_uinteger_64; //Bug C 07FFFFFFFFFFFFFFFh;
  
  - minimum:INTEGER_64  <- 0.to_raw_integer_64 - 07FFF_FFFFh.to_raw_integer_64;
  
  //
  // Conversion with test.
  //
   
  - to_integer_64:INTEGER_64     <- Self;
  



