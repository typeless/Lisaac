///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Library                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name     := Expanded REAL_32;

  - export   := REAL, REAL_64, REAL_80;
  
  - comment  := "Float (C `float' mapping).";
    
  - type     := `float`;
  - default  := (0.to_raw_real_32);
    
Section Insert
  
  - parent_float_map32:FLOAT_MAP32 := FLOAT_MAP32;

  - parent_float_real:FLOAT_REAL := FLOAT_REAL;
  
Section Public
  
  - atan :SELF <- FLOAT_PROCESSOR.atan_32 Self;

  - sqrt :SELF <- FLOAT_PROCESSOR.sqrt_32 Self;

  - log  :SELF <- FLOAT_PROCESSOR.log_32 Self;

  - sin  :SELF <- FLOAT_PROCESSOR.sin_32 Self;

  - cos  :SELF <- FLOAT_PROCESSOR.cos_32 Self;

  - pow exp:SELF :SELF <- FLOAT_PROCESSOR.pow_32 Self;
