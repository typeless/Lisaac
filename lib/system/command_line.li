////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name    := COMMAND_LINE;
    
  - comment := "Interface Command line (Unix).";
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Private

  - c_item idx:INTEGER :NATIVE_ARRAY[CHARACTER] <- `arg_vector[@idx]`:NATIVE_ARRAY[CHARACTER];
  
  - c_count:INTEGER <- `arg_count`:INTEGER;
  
  - args:FAST_ARRAY[STRING] := 
  ( + result:FAST_ARRAY[STRING];
    + arg:NATIVE_ARRAY[CHARACTER];
    + str:STRING;
    
    result := FAST_ARRAY[STRING].create_with_capacity c_count;
    0.to (c_count - 1) do { j:INTEGER;
      arg := c_item j;
      str := STRING.create (arg.fast_first_index_of '\0' until 1024);
      str.from_external_copy arg;
      result.add_last str;
    };
    result
  );
  
Section Public

  - count:INTEGER <- args.count;

  - lower:INTEGER := 0;

  - upper:INTEGER <- args.upper;

  - item idx:INTEGER :STRING <- args.item idx;  
  
  - executable_name:STRING   <- args.first;
  








