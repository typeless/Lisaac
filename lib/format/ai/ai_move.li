////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header

  + name    := AI_MOVE;
  
  - comment := "Operation: move.";
  - version := 1;  
  
Section Inherit
  
  - parent_ai_operation:AI_OPERATION := AI_OPERATION;
  
Section Public
  
  + x:REAL_16_16;
  + y:REAL_16_16;
  
  //
  // Creation.
  //
  
  - create (lx,ly:REAL_16_16) :SELF <-
  ( + result:SELF;
    result := SELF.clone;
    result.make (lx,ly);
    result
  );
  
  - make (lx,ly:REAL_16_16) <-
  (
    x := lx;
    y := ly;
  );
  
  //
  // Draw.
  //
  
  - draw_stroke b:BITMAP scale s:REAL_16_16 <-
  (    
    b.move_to (((x * s).rounded),((y * s).rounded));
  );
  
  - draw_fill b:BITMAP scale s:REAL_16_16 <-
  (    
    b.poly_move_to (((x * s).rounded),((y * s).rounded));    
  );
  
  //  
  // Display.
  //
  
  - display <-
  (
    "poly_move_to ".print;
    (x *# 8).rounded.print;
    ','.print;
    (y *# 8).rounded.print;
    ";\n".print;
  );

  



