////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name := AVL_SET_NODE[E];
  
  - comment := "Auxiliary class to implement AVL_SET.";
	
  // This a classic implementation of an AVL tree (balanced tree first
  // designed by Adelson-Velskii and Landis, 1960)
  
Section Inherit
  
  + parent_avl_tree_node:Expanded AVL_TREE_NODE[E];
  
  - parent_any_avl_set_node:ANY_AVL_SET_NODE := ANY_AVL_SET_NODE;

Section AVL_SET
  
  //
  // Creation:
  //
  
  - create i:E :SELF <-
  ( + result:SELF;
    
    result := clone;
    result.make i;
    result
  );
  
  - make i:E <-
  (
    set_balance balanced;
    left  := NULL;
    right := NULL;
    set_item i;
  )
  [
    +? {item = i};
  ];
  


