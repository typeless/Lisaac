////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name    := ARRAYED;
  
  - comment := "Generic collection";
  
  // BSBS: A revoir cela doit rentrer ARRAYED_COLLECTION (mais il faut voir avec STRING)
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public
  
  - upper:INTEGER <- deferred;
  - count:INTEGER <- deferred;

  - capacity:INTEGER <- deferred;
  
  - element_sizeof:INTEGER <- 
  // The size in number of bytes for type `E'.
  ( 
    deferred;
    0
  );
  
  - add_last_buffer buf:FAST_ARRAY[UINTEGER_8] from beg:INTEGER to end:INTEGER <-
  (
    deferred;
  );
    
  - item_byte idx:INTEGER offset ofs:INTEGER :UINTEGER_8 <-
  (
    deferred;
  );

  - set_capacity new_capacity:INTEGER <-
  (
    deferred;
  );

