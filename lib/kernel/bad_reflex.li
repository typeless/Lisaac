////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Librairy                                 //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name    := BAD_REFLEX;

  - comment := "Facility, but it's not in prototype spirit.";

Section Public
  
  //
  // Conditional.
  //
  
  - if cond:BOOLEAN then true_block:BLOCK :BOOLEAN <-
  (
    cond.if true_block
  );

  - if cond:BOOLEAN then true_block:BLOCK else false_block:BLOCK <-
  (
    cond.if true_block else false_block;
  );
  
  //
  // Loop.
  //
  
  - while cond:BLOCK do body:BLOCK <-
  (
    cond.while_do body;
  );
  
  - do body:BLOCK while cond:BLOCK <-
  (
    body.do_while cond;
  );
  
  - repeat body:BLOCK until cond:BLOCK <-
  (
    body.do_until cond;
  );
  