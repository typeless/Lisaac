////////////////////////////////////////////////////////////////////////////////
//                           Lisaac OS library                                //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name     := SYSTEM_IO;

  - comment  := "Lower level for Input / Output";
  
  - external := `
#include <stdio.h>
#include <stdlib.h>
  
// Hardware 'print_char'
void print_char(char car)
{
  fputc(car,stdout);
}

// Hardware 'exit'
int die_with_code(int code)
{
  exit(code);
}

`;

Section Inherit
  
  - parent_object:OBJECT := OBJECT;

Section Public

  - print_char byte:CHARACTER <-
  // Low level buffered output.
  (
    `fputc((int)@byte,stdout)`;
  );
  
   - print_error_char byte:CHARACTER <-
  // Low level buffered error output.
  (
    `fputc((int)@byte,stderr)`;
  ); 
  
  - get_char :CHARACTER <- `fgetc(stdin)`:(CHARACTER);
  
  - eof:CHARACTER <- `EOF`:CHARACTER;
  