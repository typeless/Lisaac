///////////////////////////////////////////////////////////////////////////////
//                            Lisaac OS Library                              //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name     := SYSTEM_IO;

  - copyright   := "2003-2005 JÃ©rome Boutet, 2003-2007 Benoit Sonntag";

  - comment  := "Lower level for Input / Output";
  
  - external := `
// Hardware 'print_char'
private static void print_char(char car)
{
  System.out.print(car);
}

// Hardware 'exit'
private static void die_with_code(int code)
{
  System.exit(code);
}

`;

Section Inherit
  
  - parent_object:OBJECT := OBJECT;

Section Public

  - print_char byte:CHARACTER <-
  // Low level buffered output.
  (
    `System.out.print(@byte)`;
  );
  
   - print_error_char byte:CHARACTER <-
  // Low level buffered error output.
  (
    `System.err.print(@byte)`;
  ); 
  
  - get_char :CHARACTER <- `System.in.read()`:(CHARACTER);
  
  - eof:CHARACTER <- `EOF`:CHARACTER;
  