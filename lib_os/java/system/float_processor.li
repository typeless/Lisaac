///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Library                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name      := FLOAT_PROCESSOR;

  - copyright := "2003-2008 Sonntag Benoit";

  - author    := "Sonntag Benoit (sonntag@icps.u-strasbg.fr)";
  - comment   := "The main prototype";
  
Section Inherit

  - parent_object:OBJECT := OBJECT;

Section Public
  
  - init; // Compatibility IsaacOS.
  
  - atan    n:REAL    :REAL    <- `Math.atan(@n)`:REAL;  
  - atan_32 n:REAL_32 :REAL_32 <- `Math.atan(@n)`:REAL_32;  
  - atan_64 n:REAL_64 :REAL_64 <- `Math.atan(@n)`:REAL_64;
  - atan_80 n:REAL_80 :REAL_80 <- `Math.atan(@n)`:REAL_80;
  
  - sqrt    n:REAL    :REAL    <- `Math.sqrt(@n)`:REAL;
  - sqrt_32 n:REAL_32 :REAL_32 <- `Math.sqrt(@n)`:REAL_32;
  - sqrt_64 n:REAL_64 :REAL_64 <- `Math.sqrt(@n)`:REAL_64;
  - sqrt_80 n:REAL_80 :REAL_80 <- `Math.sqrt(@n)`:REAL_80;

  - log     n:REAL    :REAL    <- `Math.log(@n)`:REAL;
  - log_32  n:REAL_32 :REAL_32 <- `Math.log(@n)`:REAL_32;
  - log_64  n:REAL_64 :REAL_64 <- `Math.log(@n)`:REAL_64;
  - log_80  n:REAL_80 :REAL_80 <- `Math.log(@n)`:REAL_80;

  - sin     n:REAL    :REAL    <- `Math.sin(@n)`:REAL;
  - sin_32  n:REAL_32 :REAL_32 <- `Math.sin(@n)`:REAL_32;
  - sin_64  n:REAL_64 :REAL_64 <- `Math.sin(@n)`:REAL_64;
  - sin_80  n:REAL_80 :REAL_80 <- `Math.sin(@n)`:REAL_80;

  - cos     n:REAL    :REAL    <- `Math.cos(@n)`:REAL;
  - cos_32  n:REAL_32 :REAL_32 <- `Math.cos(@n)`:REAL_32;
  - cos_64  n:REAL_64 :REAL_64 <- `Math.cos(@n)`:REAL_64;
  - cos_80  n:REAL_80 :REAL_80 <- `Math.cos(@n)`:REAL_80;

  - pow    (n,exp:REAL)    :REAL    <- `Math.pow(@n,@exp)`:REAL;
  - pow_32 (n,exp:REAL_32) :REAL_32 <- `Math.pow(@n,@exp)`:REAL_32;
  - pow_64 (n,exp:REAL_64) :REAL_64 <- `Math.pow(@n,@exp)`:REAL_64;
  - pow_80 (n,exp:REAL_80) :REAL_80 <- `Math.pow(@n,@exp)`:REAL_80;

  