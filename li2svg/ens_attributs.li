/*******	Prototype qui permet de stocker les différents attributs de méthode ou de fichier	*******/


Section Header
  + name := ENS_ATTRIBUTS;
  
  - author:="HILBERT Jérôme (hilbertjerome@gmail.com), FUHLHABER Simon(simon.fuhlhaber@gmail.com), Jacquemin Grégoire(greg-jacquemin@hotmail.fr)";
  - comment:="Gère un ensemble d'attributs";
  
  
Section Inherit
  
  + parent_linked_list: Expanded LINKED_LIST(ATTRIBUT);
  
Section Private
  
  //longueur maximale d'un attribut, permet de savoir avec quelle largeur construire le rectangle dans le diagramme
  + taille_max:INTEGER;
  //nombre de lignes, c'est à dire le nombre d'attributs de l'ensemble, utile également pour la construction du rectangle
  + nb_lignes:INTEGER;
  //contient la descrition de tous les attributs au format UML
  + buffer:STRING;
  
Section Public
  
  - make <-
  (
    taille_max := 0;
    nb_lignes := 0;
    buffer := STRING.create 256;
  );
  
  - ajouter a:ATTRIBUT <-
  (
    add_last a;
  );
  
  //pour un ensemble d'attributs d'une méthode, renvoit juste les types de retour des attributs
  - get_types_retour :STRING <-
  (
    + buf:STRING;
    buf := STRING.create 10;
    buf.copy "(";
    (is_empty).if{
      buf.append ")";
    }else{
      (lower).to (upper) do{ i:INTEGER;
        buf.append ((item i).get_type_retour);
        buf.append ",";
      };
      buf.copy (buf.substring 1 to (buf.count-1));
      buf.append ")";
    };
    buf		
  );
  
  //construit l'ensemble, en cherchant la taille maximal et le nombre de lignes
  - build :STRING <-
  (
    taille_max := 0;
    nb_lignes := 0;
    (buffer = NULL).if {
      buffer := STRING.create 256;
    };
    buffer.copy "";
    (lower).to (upper) do{ i:INTEGER;
      + as:STRING;
      + a:ATTRIBUT;
      
      a := item i;
      as := a.get_uml_string;
      nb_lignes := nb_lignes+1;
      (as.count>taille_max).if{
        taille_max := as.count;
      };
      as.append "\n";
      buffer.append as;
    };
    buffer
  );
  
  - get_uml_string :STRING <-
  (
    buffer
  );
  
  - get_taille_max :INTEGER <-	
  (
    taille_max
  );
  
  - get_nb_lignes :INTEGER <-
  (
    nb_lignes
  );
