
Section Header
  + name := ATTRIBUT;
  
  - author:="HILBERT Jérôme (hilbertjerome@gmail.com), FUHLHABER Simon(simon.fuhlhaber@gmail.com), Jacquemin Grégoire(greg-jacquemin@hotmail.fr)";
  - comment:="permet de stocker un attribut et de créer la chaine UML le décrivant";
  
  
Section Inherit
  
  + parent_object:OBJECT := OBJECT;
Section Private
  
  + nom:STRING;
  + type_retour:STRING;
  + type_acces:ACCES;
  
Section Public
  
  - make (n:STRING,type:STRING,acces:ACCES) <-
  (
    nom:=n;
    type_retour:= type;
    type_acces:=acces;
  );
  
  - get_type_retour :STRING<-
  (
    type_retour
  );
  
  - get_nom :STRING <-
  (
    nom
  );
  
  - get_type_acces :ACCES <-
  (
    type_acces
  );
  
  //renvoie l'attribut dans la bonne syntaxe pour UML
  - get_uml_string :STRING <-				
  (
    + buffer:STRING;
    buffer:=STRING.create 256;
    buffer.copy "";
    buffer.append (type_acces.get_uml_type);
    buffer.append nom;
    buffer.append (":");
    buffer.append type_retour;
    buffer
  );
  
  - print <-
  (
    + buffer:STRING;
    
    buffer:=STRING.create 256;
    buffer.copy "";
    buffer.append (type_acces.get_uml_type);
    buffer.append nom;
    buffer.append (":");
    buffer.append type_retour;
    
    buffer.print;
  );