////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name    := CONSTANT;
  
  - author  := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment := "Parent for all constants";
  
Section Inherit
  
  + parent_expr:Expanded EXPR; 
  
Section Public

  //
  // Comparison.
  //
  
  - is_constant:BOOLEAN <- TRUE;
  
  - is_invariant:BOOLEAN <- TRUE;
  
  //
  // Typing.
  //
    
  + static_type:TYPE_FULL;
  
  - get_type t:TYPES_TMP <-
  (                 
    t.add (static_type.raw);
  );

  //
  // Generation.
  //

  - remove <-
  (
    // Nothing. 
  );
  
  - execute_unlink:INSTR <-
  (
    new_execute_pass;
    NULL
  );
    
  - execute_link:EXPR <- Self;

  


