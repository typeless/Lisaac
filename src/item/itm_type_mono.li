////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := ITM_TYPE_MONO;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Type simple";
  
Section Inherit
  
  + parent_itm_type:Expanded ITM_TYPE;
  
Section Public
  
  - hash_code:INTEGER <- 
  (
    deferred;
    0
  );
  
  - is_self:BOOLEAN <- FALSE;
  
  - type_null:ITM_TYPE_MONO := ITM_TYPE_SIMPLE.get (ALIAS_STR.variable_null);
  - type_void:ITM_TYPE_MONO := ITM_TYPE_SIMPLE.get (ALIAS_STR.variable_void);
  
  - to_run:TYPE_FULL <-
  (
    deferred;
    NULL
  );