////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := ITM_REAL;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Real float constant";
  
Section Inherit
  
  + parent_itm_constant:Expanded ITM_CONSTANT;
  
Section Public

  //
  // Data
  //

  + value:STRING_CONSTANT;

  //
  // Constructor
  //
  - create p:POSITION value n:STRING_CONSTANT :SELF <-
  ( + result:SELF;
    result := clone;
    result.make p value n;
    result
  );
  
  - make p:POSITION value n:STRING_CONSTANT <-
  (
    position:=p;
    value:=n;
  );
  
  //
  // Runnable
  //

  - to_run_expr:EXPR <-
  (     
    REAL_CST.create position value value type (type_real.default)    
  );
  

