////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := TYPE_VOID;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Special virtual Void type";
  
Section Inherit
  
  + parent_type:Expanded TYPE;
  
Section Public
  
  - name:STRING_CONSTANT <- ALIAS_STR.variable_void;
    
  //
  // Creation.
  //
    
  - make_void <-
  ( 
    dico_type.fast_put Self to name;    
    default := TYPE_FULL.create Self with 0;
  );
  
  //
  // Type control.
  //
  
  - is_export_to t:TYPE :BOOLEAN <- FALSE;
  - is_import_to t:TYPE :BOOLEAN <- FALSE;
  
  //
  // Genere.
  //
  
  - genere_struct <-
  (
    // Nothing.
  );
  
Section Public
  
  - is_sub_type other:TYPE :BOOLEAN <- FALSE;  

