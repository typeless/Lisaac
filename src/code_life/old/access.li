////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := ACCESS;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Access slot (read/write)";
  
Section Inherit
  
  + parent_any:Expanded ANY;
  
Section Public
  
  // BSBS: Optim: On pourait partager les access pour les READ/WRITE pour les locals et globals.
  
  // BSBS:BUG
  - local:VARIABLE <- (deferred; NULL);
  - slot:SLOT_DATA <- (deferred; NULL);
  - vector:VECTOR  <- (deferred; NULL); // BSBS: Quesako ?
  - receiver:EXPR;
  
  - variable:VARIABLE <- 
  (
    deferred;
    NULL
  );
  
  - set_variable v:VARIABLE <- deferred;
  
  - is_local:BOOLEAN <- FALSE;
  
  - static_type:TYPE_FULL <- 
  ( 
    variable.type
  );
  
  - my_copy_receiver:EXPR <- NULL;
    
  //
  // Execute.
  //

  - is_equal other:ACCESS :BOOLEAN <- 
  (
    variable = other.variable
  );
  
  - execute_access_unlink:INSTR <- NULL;
  
  - execute_access_link;
  
  - remove_access;
  
  //
  // Display.
  //
  
  - display_access buffer:STRING <-
  (
    // Nothing.
  );
  
  //
  // Genere.
  //
  
  - genere_access buffer:STRING <-
  (
    genere_receiver buffer;
    buffer.append (variable.intern_name);
  );

  - genere_receiver buffer:STRING <-
  (
    // Nothing.
  );
