profil_block.li:      result := EXPR_MULTIPLE.create lst;      
item/itm_list.li:	result := EXPR_MULTIPLE.create lr;
item/itm_read.li:    + em:EXPR_MULTIPLE;
item/itm_read.li:  ( + em:EXPR_MULTIPLE;
item/itm_type_multi.li:    EXPR_MULTIPLE.create lst
item/itm_write.li:    + em:EXPR_MULTIPLE;
item/itm_write_value.li:    + val_multiple:EXPR_MULTIPLE;
item/itm_write_value.li:      result := EXPR_MULTIPLE.create lst_exp;
item/itm_write_value.li:  - affect idf:STRING_CONSTANT with val:EXPR_MULTIPLE 
item/itm_write_value.li:	//BSBS: Recycle les EXPR_MULTIPLE
item/itm_write_value.li:	lst.add_last (affect_slot idf with (EXPR_MULTIPLE.create lst_expr));
type/type_block.li:      result := EXPR_MULTIPLE.create lst;
type/type_null.li:    //+ em:EXPR_MULTIPLE;
dispatcher/dta_block.li:    + em:EXPR_MULTIPLE;
dispatcher/dta_wr_value.li:    + em:EXPR_MULTIPLE;
dispatcher/node_style.li:    + em:EXPR_MULTIPLE;
code_life/expr_multiple.li:  + name        := EXPR_MULTIPLE;
code_life/expr_multiple.li:    crash_with_message "EXPR_MULTIPLE.get_type";
code_life/expr_multiple.li:    crash_with_message "EXPR_MULTIPLE.execute_link";
