////////////////////////////////////////////////////////////////////////////////
//                           Lisaac Compiler                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////

Section Header
  
  + name := HELLO;
  
Section Inherit
  
 // - parent_object:HELLO := HELLO;
  
Section Public
  
  - string_l:STRING := STRING.create 64;
  - string_c:STRING := STRING.create 64;
  
  - main <-
  ( + a,b:REAL_32;
    + i:INTEGER;
    + nc:NATIVE_ARRAY[CHARACTER];
    
    {
      i := i + 1;
      a := 1.to_real_32 / i;
            
      // Lisaac Version :
      string_l.clear;
      b := a + 0.00000499999999999;
      b.append_in string_l decimal 5;            
      // C version :
      string_c.copy "       ";      
      nc := string_c.to_external;
      `sprintf(@nc,"%2.5f\n",@a)`;    
      //
      (string_l !== string_c).if {
	"-----------\n".print;      
	`printf("%2.10f\n",@a)`;          
	"L : ".print;
	(a*100_000+0.5).print_decimal 5;
	' '.print;	
	a.mantissa.prin t; ' '.print;
	a.exponent.print; ' '.print;
	'\n'.print;
	"C : ".print;
	string_c.print;
	'\n'.print;
      };
    }.do_while {i < 100_000};
  );
