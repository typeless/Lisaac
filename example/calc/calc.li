////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Example                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := CALC;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "Calc application.";
  
Section Inherit
  
  - parent_object:OBJECT := OBJECT;
  
Section Public
  
  - main <-
  ( + e:EXPR;
    + result:INTEGER;
    
    (COMMAND_LINE.count != 2).if {
      "Usage :\n  ".print;
      COMMAND_LINE.executable_name.print;
      " <Arithmetic expression>\n\
      \Example :\n  ".print;
      COMMAND_LINE.executable_name.print;
      " \"(1-2)+(3+2*-5)\"\n".print;
    } else {
      e := PARSE_EXPR.parse (COMMAND_LINE.item 1);      
      result := e.value;
      "Result : ".print;
      result.print;
      '\n'.print;
    };
  );
