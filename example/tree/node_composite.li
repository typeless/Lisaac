////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Example                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name        := NODE_COMPOSITE;
  
  - author      := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment     := "The composite tree node.";
  
Section Inherit
  
  + parent_node:Expanded NODE;
  
Section Public  
  
  + children:LINKED_LIST[NODE];
  
  - add n:NODE <-
  (
    children.add_last n;
  );
  
  //
  // Creation.
  //
    
  - make lab:ABSTRACT_STRING <-
  ( 
    parent_node.make lab;
    children := LINKED_LIST[NODE].create;
  );
  
  //
  // Display.
  //
  
  - print <-
  (
    parent_node.print;
    (children.is_empty).if_false {
      indent.append "  ";
      (children.lower).to (children.upper) do { j:INTEGER; 
        children.item j.print;
      };
      indent.remove_last 2;
    };
  );
