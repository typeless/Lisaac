/* The Computer Language Shootout Benchmarks
   http://shootout.alioth.debian.org/
   contributed by Xavier Oswald & Anthony Pajot

   Compilation:
     - lisaac -O -i20 nbody.li
*/

Section Header

  + name := NBODY;
  
Section Inherit
  
  - parent_object : OBJECT := OBJECT;
  
Section Private
  
  - nbodies : INTEGER;
  
  - bodies:NATIVE_ARRAY[Expanded PLANET];
  
  - (b,b2) :Strict PLANET;
  -  b2:Strict PLANET;
  - (dx,dy,dz,distance,mag):REAL_64;
  
Section External
  
  - advance (dt:REAL_64,n:INTEGER) <-
  (     
    0.to n do { i : INTEGER;          
      b := bodies.item i.this;            

      (i + 1).to n do { j : INTEGER;		

        b2 := bodies.item j.this;	

        (dx,dy,dz) := (b.x - b2.x, b.y - b2.y, b.z - b2.z);

        distance := (dx * dx + dy * dy + dz * dz).sqrt;	

        mag := dt / (distance * distance * distance);

        b.set_vx  (b.vx - dx * b2.mass * mag) vy (b.vy - dy * b2.mass * mag) vz (b.vz - dz * b2.mass * mag);
        b2.set_vx (b2.vx + dx * b.mass * mag) vy (b2.vy + dy * b.mass * mag) vz (b2.vz + dz * b.mass * mag);
      };      
    };        
    0.to n do { i : INTEGER;
      b := bodies.item i.this;

      b.set_x (b.x + dt * b.vx) y (b.y + dt * b.vy) z (b.z + dt * b.vz);
    };
  );

  - energy n:INTEGER :REAL_64 <-
  ( + (b,b2) : Strict PLANET;    
    + e, dx, dy, dz , distance : REAL_64;

    0.to nbodies do { i : INTEGER;      
      b := bodies.item i.this;
      e := e + b.mass * 0.5 * (b.vx * b.vx + b.vy * b.vy + b.vz * b.vz);

      (i + 1).to nbodies do { j : INTEGER;		
        b2 := bodies.item j.this;

        (dx,dy,dz) := (b.x - b2.x , b.y - b2.y ,b.z - b2.z);

        distance := (dx * dx + dy * dy + dz * dz).sqrt;

        e := e - (b.mass * b2.mass) / distance;
      };
    };

    e		
  );

  - offset_momentum n:INTEGER <-
  ( + px, py, pz : REAL_64;
    + b : Strict PLANET;
    0.to n do { i : INTEGER;			
      b := bodies.item i.this;
      (px,py,pz) := (px + b.vx * b.mass, py + b.vy * b.mass ,  pz + b.vz * b.mass);
    };

    bodies.first.set_speed_to (
      - px / PLANET.solar_mass,
      - py / PLANET.solar_mass,
      - pz / PLANET.solar_mass
    );	

  );
Section Public

  - main <-
  ( + n:INTEGER;		

    n := COMMAND_LINE.item 1.to_integer;
    nbodies := 4;
    bodies  := NATIVE_ARRAY[Expanded PLANET].calloc_intern nbodies;

    bodies.item 0.make_sun;
    bodies.item 1.make_jupiter;
    bodies.item 2.make_saturn;
    bodies.item 3.make_uranus;
    bodies.item 4.make_neptune;

    offset_momentum nbodies;

    energy nbodies.print_format_c "%.9f\n";

    1.to n do { i:INTEGER;
      advance (`0.01`:REAL_64,nbodies);      
    };
    
    energy nbodies.print_format_c "%.9f\n";
  );
	
