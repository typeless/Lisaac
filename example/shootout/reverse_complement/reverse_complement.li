///////////////////////////////////////////////////////////////////////////////
//                              Lisaac Example                               //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name         := REVERSE_COMPLEMENT;
  
  - bibliography := "http://IsaacOS.com";
  - author       := "Xavier Oswald (x.oswald@free.fr)";
  - comment      := "Language shootout - REVERSE-COMPLEMENT";
  
Section Inherit
  
  - parent_any:OBJECT := OBJECT;

Section Public
      
  - iub_pairs:STRING_CONSTANT := "\0TVGH\0\00h\CD\0\0M\0KN\0\0\0YSAABW\0R";
    
  - main <-
  ( + buf:STRING;
    + size:INTEGER;
    + i,j,end:INTEGER;
    + tmp:CHARACTER;
   
    buf := STRING.create 25416746;
        
    size := FS_MIN.read `stdin`:POINTER in buf size 25416745;
    i := 1;
    {i <= size}.while_do {
      {buf.item i != '\n'}.while_do { i := i + 1; };
      i := i + 1;
      j := i;
      {(buf.item j != '>') && {buf.item j != 0}}.while_do { j := j + 1; };
      end := j;
      j := j - 1;
      {i < j}.while_do {
        (buf.item i = '\n').if { i := i + 1; };
        (buf.item j = '\n').if { j := j - 1; };
        tmp := iub_pairs.item ((buf.item i.to_integer & 1Fh)+1);
        buf.put (iub_pairs.item ((buf.item j.to_integer & 1Fh)+1)) to i;
        buf.put tmp to j;
        i := i + 1;
        j := j - 1;
      };
      i := end;
    };
    buf.remove_last 1;
    buf.println;        
  );
