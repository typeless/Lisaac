/* The Computer Language Shootout Benchmarks
   http://shootout.alioth.debian.org/
   contributed by Xavier Oswald & Pierre-Alexandre Voye

   Compilation:
     - lisaac -O -i20 chameneos_redux.li

   Based on the C++ version
*/

Section Header
  
  + name := CHAMENEOS_REDUX;
  
Section Inherit
  
  - parent_any:OBJECT := OBJECT;

Section Private  

  - blue:    INTEGER := 0;
  - red:     INTEGER := 1;
  - yellow:  INTEGER := 2;
  - invalid: INTEGER := 3;
 
  - colour_name: FAST_ARRAY[STRING_CONSTANT] := FAST_ARRAY[STRING_CONSTANT].create_with_capacity 3;

  - init_colour_name <-
  (
    colour_name.add_last "blue";
    colour_name.add_last "red";
    colour_name.add_last "yellow";
  );

  - do_compliment a:INTEGER and b:INTEGER :INTEGER <-
  ( + result:INTEGER;
    
    a
    .when blue then   { b
                        .when blue   then {result := blue;  }
                        .when red    then {result := yellow;}
                        .when yellow then {result := red;   };
                      }
    .when red then    { b
                        .when blue   then {result := yellow;}
                        .when red    then {result := red;   }
                        .when yellow then {result := blue;  };
                      }
    .when yellow then { b
                        .when blue   then {result := red;   }
                        .when red    then {result := blue;  }
                        .when yellow then {result := yellow;};
                      };
    result
  );

  - print_colours a:INTEGER and b:INTEGER <-
  (
    (colour_name.item a).print;
    " + ".print;
    (colour_name.item b).print;
    " -> ".print;
    (colour_name.item (do_compliment a and b)).print;
    '\n'.print;
  );

  - print_colours <-
  (
    print_colours blue   and blue;
    print_colours blue   and red;
    print_colours blue   and yellow;
    print_colours red    and blue;
    print_colours red    and red;
    print_colours red    and yellow;
    print_colours yellow and blue;
    print_colours yellow and red;
    print_colours yellow and yellow;
  );

Section Public

  - main <-
  ( + n:INTEGER;

    (COMMAND_LINE.count = 2).if {
      n := COMMAND_LINE.item 1.to_integer;
    } else {
      n := 600;
    };
    
    init_colour_name;
    print_colours;

  );
