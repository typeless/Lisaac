/* The Computer Language Shootout Benchmarks
   http://shootout.alioth.debian.org/
   contributed by Xavier Oswald & Anthony Pajot

   Compilation:
     - lisaac -O -i20 mandelbrot.li
*/

Section Header

  + name := MANDELBROT;
  
Section Inherit
  
  - parent_object : OBJECT := OBJECT;
  
Section Public
   
  - main <-
  ( + w, h, bit_num:INTEGER;
    + iter:INTEGER;
    + byte_acc:INTEGER_8;
    + limit_sqr,ci,zr,zr2:REAL_64;
    + i:INTEGER;
    + mod_w,wm1,x2:INTEGER;
    + cmd:STRING;
    + cr, cr2 :REAL_64;

    iter      := 50;
    limit_sqr := 4.0;

    cmd := COMMAND_LINE.item 1;
    h := w := cmd.to_integer;    

    "P4\n".print;
    cmd.print;
    ' '.print;
    cmd.print;
    "\n".print;

    mod_w := 8 - w % 8;
    wm1   := w - 1;

    0.to (h - 1) do {y : INTEGER;

      ci  := (y*2).to_real_64 / h - 1.0;

      0.to wm1 by 2 do {x : INTEGER;
        + zi, zi2:REAL_64;
        + tr, ti, tr2, ti2:REAL_64;

        x2  := x + x;
        cr  :=     x2.to_real_64 / w - 1.5;
        cr2 := (x2+2).to_real_64 / w - 1.5;

        i := 0;
        byte_acc := byte_acc << 2;
        {
          zi := zr  * zi  * 2.0 + ci;
          zi2:= zr2 * zi2 * 2.0 + ci;

          zr := tr  - ti  + cr;
          zr2:= tr2 - ti2 + cr2;

          tr := zr  * zr;
          tr2:= zr2 * zr2;

          ti := zi  * zi;
          ti2:= zi2 * zi2;

          i  := i + 1;	  

        }.do_while {
          (i < iter) && {
            (tr + ti <= limit_sqr) || {tr2 + ti2 <= limit_sqr}
          }
        };

        (tr + ti <= limit_sqr).if {
          byte_acc := byte_acc | 02h;        
        };
        (tr2 + ti2 <= limit_sqr).if {
          byte_acc := byte_acc | 01h;
        };	

        bit_num := bit_num + 2;
        (bit_num = 8).if {
          byte_acc.to_character.print; 
          byte_acc := bit_num := 0;
        };        
      };
      (bit_num != 0).if {
        byte_acc := byte_acc << mod_w; 
        byte_acc.to_character.print; 
        byte_acc := bit_num := 0;
      };
    };		    
  );
