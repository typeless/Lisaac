////////////////////////////////////////////////////////////////////////////////
//                            Lisaac Example                                  //
//                                                                            //
//                  LSIIT - ULP - CNRS - INRIA - FRANCE                       //
//                                                                            //
//    This program is free software; you can redistribute it and/or modify    //
//    it under the terms of the CeCILL v2 License as published by the         //
//    CEA - CNRS - INRIA.                                                     //
//                                                                            //
//    This program is distributed in the hope that it will be useful,         //
//    but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            //
//    CeCILL v2 License for more details.                                     //
//                                                                            //
//    You should have received a copy of the CeCILL v2 license along with     //
//    this program.                                                           //
//    If not, see <http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt>  //
//                                                                            //
//                    http://isaacproject.u-strasbg.fr/                       //
////////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name     := MASTER; 
     
  - author   := "Sonntag Benoit (bsonntag@loria.fr)";
  - comment  := "";
  
Section Inherit  
    
  - parent_object:OBJECT := OBJECT;
  
Section Private  
  
  - action n:INTEGER if_odd odd_block:BLOCK if_even even_block:BLOCK <-
  (
    (n.is_even).if {
      even_block.value;
    } else {
      odd_block.value;
    };
  );
      
Section Public  

  - main <-
  ( + n:INTEGER;
    
    "Entry a number:\n".print;
    IO.read_integer;    
    n := IO.last_integer;
    action n 
    if_odd  { "This integer is odd.\n".print;  }
    if_even { "This integer is even.\n".print; };         
  );
