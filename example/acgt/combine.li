///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Example                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////
Section Header
  
  + name      := COMBINE;

  - copyright := "2003-2009 Sonntag Benoit";

  - author    := "Sonntag Benoit (sonntag@icps.u-strasbg.fr)";
  - comment   := "The main prototype";

Section Inherit

  - parent_object:OBJECT := OBJECT;

Section Public
  
  - size:INTEGER := 4;
  
  - tab:FAST_ARRAY[CHARACTER] := 
  ( + result:FAST_ARRAY[CHARACTER];
    result := FAST_ARRAY[CHARACTER].create_with_capacity size;
    result.add_last 'A';
    result.add_last 'C';
    result.add_last 'G';
    result.add_last 'T';
    result
  );
  
  - main <-
  ( + idx:INTEGER;
    + res:FAST_ARRAY[CHARACTER];
    
    res := FAST_ARRAY[CHARACTER].create size;
    {
      
    }.do_while {};
  );
  
  - print t:FAST_ARRAY[CHARACTER] <-
  (
    (t.lower).to (t.upper) do { i:INTEGER;
      t.item i.print;
    };
    '\n'.print;
  );