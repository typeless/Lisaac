Section Header
	+ name := ENS_FICHIERS;
	- author:="HILBERT J�r�me (hilbertjerome@gmail.com), FUHLHABER Simon(simon.fuhlhaber@gmail.com), Jacquemin Gr�goire(greg-jacquemin@hotmail.fr)";

Section Inherit
  	+ parent_linked_list: Expanded LINKED_LIST[FICHIER];

Section Public

	- ajouter f:FICHIER <-
	(
 		add_last f ;
	);
	
	- ajouter_tous es:ENS_FICHIERS <-
	(
		append_collection es;	
	);
	
	//supprime toutes les redondances de fichier dans l'ensemble
	- clean <-
	(
		+i:INTEGER;
		i:=lower;
		{i<=upper}.while_do{
			+f:FICHIER;
			f:=item i;
			(has_an_other_occurrence_of f).if{
				remove i;
			}else{
				f.remove_parents Self;
				i:=i+1;
			};
		};	
	);
	//recherche si l'ensemble contient une autre occurrence d'un certain fichier
	- has_an_other_occurrence_of f:FICHIER :BOOLEAN <-
	(
		+result:INTEGER;
		result:=0;
		(lower).to (upper) do{ i:INTEGER;
			+ f2:FICHIER;
			
			f2:=item i;
			((f2.get_nom) == (f.get_nom)).if{
				result:=result+1;
			};
		};
		(result>1)
	);
	//permet de r�cup�rer tous les fichiers morts-vivants de l'ensemeble, par rapport � un fichier (g)
	- get_morts_vivants (f,g:FICHIER) in m_v:ENS_PARENTS :ENS_PARENTS <-
	(
		+ ep,res:ENS_PARENTS;
		+ i:INTEGER;
		
		res:=ENS_PARENTS.create;
		ep:=f.get_parents;
		i:=ep.lower;
		{i<=ep.upper}.while_do{
			+ k:INTEGER;
			k:=lower;
			{k<=upper}.while_do{
				((ep.item i)==(item k .get_nom)).if{
					(m_v.has (item k .get_nom)).if_false{
						m_v.ajouter (item k .get_nom);
						((item k .get_nom)==(g.get_nom)).if{
							k:=upper+1;
							i:=ep.upper;
						}
						else
						{	
							get_morts_vivants ((item k),g) in m_v;
							((m_v.last)==(g.get_nom)).if{
								res.add_last (m_v.first);
								k:=upper+1;
								i:=ep.upper;
							};
						};
					}
					else
					{
						k:=upper;
					};
				};
				k:=k+1;
			};
			i:=i+1;
		};
		res
	);