///////////////////////////////////////////////////////////////////////////////
//                             Lisaac Library                                //
//                                                                           //
//                   LSIIT - ULP - CNRS - INRIA - FRANCE                     //
//                                                                           //
//   This program is free software: you can redistribute it and/or modify    //
//   it under the terms of the GNU General Public License as published by    //
//   the Free Software Foundation, either version 3 of the License, or       //
//   (at your option) any later version.                                     //
//                                                                           //
//   This program is distributed in the hope that it will be useful,         //
//   but WITHOUT ANY WARRANTY; without even the implied warranty of          //
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           //
//   GNU General Public License for more details.                            //
//                                                                           //
//   You should have received a copy of the GNU General Public License       //
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.   //
//                                                                           //
//                     http://isaacproject.u-strasbg.fr/                     //
///////////////////////////////////////////////////////////////////////////////

Section Header

  + name := DYNAMIC_TYPE;
  - copyright := "2009 Mildred Ki'Lya <http://ki.lya.online.fr>";
  - comment   := "Test dynamic type";

Section Inherit

  + parent:Expanded OBJECT;

Section Public

  - get_dynamic_type e:Strict E :E <- E;

  - main <-
  ( + s:ABSTRACT_STRING;
    + t:ABSTRACT_STRING;
    + c:INTEGER;

    c := exit_failure_code;

    s := "test";
    t := get_dynamic_type s;

    "dynamic_type = ".print;
    (t = ABSTRACT_STRING).if {
      "ABSTRACT_STRING".println;
    }.elseif {t = STRING} then {
      "STRING".println;
    }.elseif {t = STRING_CONSTANT} then {
      "STRING_CONSTANT".println;
      c := exit_success_code;
    } else {
      "???".println;
    };

    die_with_code c;
  );
